module.exports = ({
	components,
}) => `/* eslint-disable global-require, quote-props, no-template-curly-in-string */
const raw = require('raw.macro')
/**
 * NOTE:
 * This file is automatically generated by the build process.
 * DO NOT CHANGE IT BY HAND or your changes will be lost.
 * 
 * To change the format of this file, modify website/build/data.template.js
 */

const components = {${components
	.map(
		(component) => `
    '${component.key}': {
        description: '${
			component.pkg.description ||
			component.description ||
			'No description added'
		}',
        docs: ${
			component.docs
				? `() => import(/* webpackChunkName: '${component.key}' */ '@autoit/${component.key}/dist/docs')`
				: 'false'
		},
        readme: ${
			component.readme
				? `() => raw('../node_modules/@autoit/${component.key}/README.md')`
				: 'false'
		},
        changelog: ${JSON.stringify(component.changelog)},
        props: ${JSON.stringify(component.props)},
        key: '${component.key}',
        name: '${component.name}',
        packageName: '${component.pkg.name}',
        maintainers: ${
			component.pkg.maintainers
				? JSON.stringify(component.pkg.maintainers || [])
				: JSON.stringify(component.maintainers || [])
		},
    isPublished: '${component.isPublished}',
    publishedDate: '${component.lastPublishedOn}',
    version: '${component.pkg.version || component.currentVersion}',
    supportsDarkMode: ${!!component.supportsDarkMode},
    ${
		component.nestedDocs
			? `components: {
        ${component.props.map(
			({ name }) =>
				`${name}: import('@autoit/${component.key}/docs/components/${name}')`
		)}
    },`
			: ''
	}
    packageHasBeenMoved: ${!!component.packageHasBeenMoved},
    dependencies: ${JSON.stringify(component.pkg.dependencies)},
    peerDependencies: ${JSON.stringify(component.pkg.peerDependencies)},
    devDependencies: ${JSON.stringify(component.pkg.devDependencies)},
},
`
	)
	.join('')}};

export default components;
`;
